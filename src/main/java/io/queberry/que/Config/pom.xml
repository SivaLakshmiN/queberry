<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.queberry.que</groupId>
	<artifactId>rta_backend</artifactId>
	<version>2.11.3</version>
	<packaging>jar</packaging>

	<name>que</name>
	<description>Que by Sequre Technologies</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.3.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.M3</spring-cloud.version>
		<docker.maven.plugin.version>1.2.2</docker.maven.plugin.version>
		<docker.image.prefix>queberry</docker.image.prefix>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.netflix.graphql.dgs</groupId>
				<artifactId>graphql-dgs-platform-dependencies</artifactId>
				<!-- The DGS BOM/platform dependency. This is the only place you set version of DGS -->
				<version>4.9.16</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.ldap</groupId>
			<artifactId>spring-ldap-core</artifactId>
			<version>2.3.4.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.springframework.kafka</groupId>-->
<!--			<artifactId>spring-kafka</artifactId>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>com.microsoft.graph</groupId>
			<artifactId>microsoft-graph</artifactId>
			<version>5.29.0</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.graph</groupId>
			<artifactId>microsoft-graph-core</artifactId>
			<version>2.0.1</version>
		</dependency>
		<dependency>
			<groupId>com.azure</groupId>
			<artifactId>azure-identity</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>io.projectreactor.netty</groupId>
			<artifactId>reactor-netty</artifactId>
			<version>1.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-zuul</artifactId>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.1.1</version> <!-- Replace with the latest version -->
		</dependency>
		<!--Jackson datatypes-->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
		</dependency>

		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>4.3.1</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.4.25.Final</version>
		</dependency>

		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson-hibernate-53</artifactId>
			<version>3.43.0</version>
		</dependency>

		<!--<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
			<version>5.0.1.Final</version>
		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>javax.xml.soap</groupId>-->
<!--			<artifactId>javax.xml.soap-api</artifactId>-->
<!--			<version>1.4.0</version>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>com.h2database</groupId>-->
<!--			<artifactId>h2</artifactId>-->
<!--			<scope>runtime</scope>-->
<!--		</dependency>-->
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.5.13</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>

		<dependency>
			<groupId>org.docx4j</groupId>
			<artifactId>docx4j</artifactId>
			<version>3.2.1</version> <!-- Use the latest version available -->
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>slf4j</groupId>
					<artifactId>slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>4.0.0</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.11</version>
		</dependency>
		<dependency>
			<groupId>com.microsoft.sqlserver</groupId>
			<artifactId>mssql-jdbc</artifactId>
			<version>8.3.0.jre8-preview</version>
		</dependency>
		<!-- exclude tomcat jdbc connection pool, use HikariCP -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.zaxxer</groupId>
					<artifactId>HikariCP</artifactId>
				</exclusion>
			</exclusions>
<!--			<exclusions>-->
<!--				<exclusion>-->
<!--					<groupId>org.apache.tomcat</groupId>-->
<!--					<artifactId>tomcat-jdbc</artifactId>-->
<!--				</exclusion>-->
<!--			</exclusions>-->
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>9.0.10</version>
		</dependency>

		<!-- exclude tomcat-jdbc, Spring Boot will use HikariCP automatically  -->
<!--		<dependency>-->
<!--			<groupId>com.zaxxer</groupId>-->
<!--			<artifactId>HikariCP</artifactId>-->
<!--		</dependency>-->
		<!--mDNS server-->
		<dependency>
			<groupId>org.jmdns</groupId>
			<artifactId>jmdns</artifactId>
			<version>3.5.3</version>
		</dependency>
		<!--Web socket support-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-messaging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.soap</groupId>
			<artifactId>javax.xml.soap-api</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.messaging.saaj</groupId>
			<artifactId>saaj-impl</artifactId>
			<version>1.5.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>23.5-jre</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.4.12</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.icu</groupId>
			<artifactId>icu4j</artifactId>
			<version>60.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.mockito</groupId>-->
<!--			<artifactId>mockito-core</artifactId>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.spockframework</groupId>-->
<!--			<artifactId>spock-core</artifactId>-->
<!--			<version>1.1-groovy-2.4</version>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<!--vault-->
		<dependency>
			<groupId>org.mapdb</groupId>
			<artifactId>mapdb</artifactId>
			<version>2.0-beta12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-core</artifactId>
			<version>1.7</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>com.netflix.graphql.dgs</groupId>
			<artifactId>graphql-dgs-spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.5.Final</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.mockito</groupId>-->
<!--			<artifactId>mockito-core</artifactId>-->
<!--		</dependency>-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-parameters</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>false</executable>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
<!--			<plugin>-->
<!--				<groupId>com.github.eirslett</groupId>-->
<!--				<artifactId>frontend-maven-plugin</artifactId>-->
<!--				<version>1.10.0</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<configuration>-->
<!--							<nodeVersion>v16.13.0</nodeVersion>-->
<!--							<yarnVersion>v1.13.0</yarnVersion>-->
<!--							<workingDirectory>src/main/ng</workingDirectory>-->
<!--						</configuration>-->
<!--						<id>install node and yarn</id>-->
<!--						<goals>-->
<!--							<goal>install-node-and-yarn</goal>-->
<!--						</goals>-->
<!--						<phase>generate-resources</phase>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>yarn install</id>-->
<!--						<goals>-->
<!--							<goal>yarn</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<arguments>install</arguments>-->
<!--							<workingDirectory>src/main/ng</workingDirectory>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--					<execution>-->
<!--						<id>yarn build</id>-->
<!--						<goals>-->
<!--							<goal>yarn</goal>-->
<!--						</goals>-->
<!--						<phase>generate-resources</phase>-->
<!--						<configuration>-->
<!--							<arguments>build-prod</arguments>-->
<!--							<workingDirectory>src/main/ng</workingDirectory>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--&lt;!&ndash;&lt;!&ndash;					<execution>&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;						<configuration>&ndash;&gt;-->
<!--&lt;!&ndash;							<nodeVersion>v10.13.0</nodeVersion>&ndash;&gt;-->
<!--&lt;!&ndash;							<yarnVersion>v1.3.2</yarnVersion>&ndash;&gt;-->
<!--&lt;!&ndash;							<workingDirectory>src/main/survey</workingDirectory>&ndash;&gt;-->
<!--&lt;!&ndash;						</configuration>&ndash;&gt;-->
<!--&lt;!&ndash;						<id>install node and yarn survey</id>&ndash;&gt;-->
<!--&lt;!&ndash;						<goals>&ndash;&gt;-->
<!--&lt;!&ndash;							<goal>install-node-and-yarn</goal>&ndash;&gt;-->
<!--&lt;!&ndash;						</goals>&ndash;&gt;-->
<!--&lt;!&ndash;						<phase>generate-resources</phase>&ndash;&gt;-->
<!--&lt;!&ndash;					</execution>&ndash;&gt;-->
<!--&lt;!&ndash;					<execution>&ndash;&gt;-->
<!--&lt;!&ndash;						<id>yarn install survey</id>&ndash;&gt;-->
<!--&lt;!&ndash;						<goals>&ndash;&gt;-->
<!--&lt;!&ndash;							<goal>yarn</goal>&ndash;&gt;-->
<!--&lt;!&ndash;						</goals>&ndash;&gt;-->
<!--&lt;!&ndash;						<configuration>&ndash;&gt;-->
<!--&lt;!&ndash;							<arguments>install</arguments>&ndash;&gt;-->
<!--&lt;!&ndash;							<workingDirectory>src/main/survey</workingDirectory>&ndash;&gt;-->
<!--&lt;!&ndash;						</configuration>&ndash;&gt;-->
<!--&lt;!&ndash;					</execution>&ndash;&gt;-->
<!--&lt;!&ndash;					<execution>&ndash;&gt;-->
<!--&lt;!&ndash;						<id>yarn build survey</id>&ndash;&gt;-->
<!--&lt;!&ndash;						<goals>&ndash;&gt;-->
<!--&lt;!&ndash;							<goal>yarn</goal>&ndash;&gt;-->
<!--&lt;!&ndash;						</goals>&ndash;&gt;-->
<!--&lt;!&ndash;						<phase>generate-resources</phase>&ndash;&gt;-->
<!--&lt;!&ndash;						<configuration>&ndash;&gt;-->
<!--&lt;!&ndash;							<arguments>build-prod</arguments>&ndash;&gt;-->
<!--&lt;!&ndash;							<workingDirectory>src/main/survey</workingDirectory>&ndash;&gt;-->
<!--&lt;!&ndash;						</configuration>&ndash;&gt;-->
<!--&lt;!&ndash;					</execution>&ndash;&gt;-->

<!--				</executions>-->
<!--			</plugin>-->
			<plugin>
				<groupId>org.jvnet.jaxb2.maven2</groupId>
				<artifactId>maven-jaxb2-plugin</artifactId>
				<version>0.14.0</version>
				<executions>
					<execution>
						<id>ajman-bank-local</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaLanguage>WSDL</schemaLanguage>
							<schemas>
								<schema>
									<fileset>
										<includes>
											<include>ajman.wsdl</include>
										</includes>
									</fileset>
								</schema>
							</schemas>
							<generatePackage>io.queberry.que.sms.ajmanbank.client</generatePackage>
							<generateDirectory>${project.build.directory}/generated-sources/xjc-ajman-bank-client</generateDirectory>
							<useActiveProxyAsHttpproxy>false</useActiveProxyAsHttpproxy>
						</configuration>
					</execution>
					<execution>
						<id>rta-local</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<schemaLanguage>WSDL</schemaLanguage>
							<schemas>
								<schema>
									<fileset>
										<includes>
											<include>rta.wsdl</include>
										</includes>
									</fileset>
								</schema>
							</schemas>
							<generatePackage>io.queberry.que.sms.rta.client</generatePackage>
							<generateDirectory>${project.build.directory}/generated-sources/xjc-rta-client</generateDirectory>
							<useActiveProxyAsHttpproxy>false</useActiveProxyAsHttpproxy>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
					<baseImage>openjdk:8-jdk-alpine</baseImage>
					<runs>
						<run>update-ca-certificates</run>
						<run>apk add --no-cache fontconfig ttf-dejavu</run>
						<run>apk add --no-cache curl</run>
					</runs>
					<entryPoint>exec java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /${project.build.finalName}.jar</entryPoint>
<!--					<volumes>-->
<!--						<volume>/tmp</volume>-->
<!--					</volumes>-->
					<serverId>que_ent</serverId>
					<forceTags>true</forceTags>
					<imageTags>
						<imageTag>${project.version}</imageTag>
					</imageTags>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
						<resource>
							<targetPath>/usr/local/share/ca-certificates</targetPath> <!-- Define where files should be copied inside the container -->
							<directory>${project.basedir}/src/main/resources/certs</directory>
							<includes>
								<include>**/*</include>  <!-- Copy 'certs' directory -->
							</includes>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
		<resources>
<!--			<resource>-->
<!--				<directory>src/main/ng/dist</directory>-->
<!--				<targetPath>static</targetPath>-->
<!--			</resource>-->
<!--			<resource>-->
<!--				<directory>src/main/survey/dist</directory>-->
<!--				<targetPath>static/survey</targetPath>-->
<!--			</resource>-->
			<resource>
				<directory>src/main/key</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.xlsx</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.xlsx</include>
				</includes>
			</resource>
		</resources>
	</build>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</pluginRepository>
	</pluginRepositories>

</project>
